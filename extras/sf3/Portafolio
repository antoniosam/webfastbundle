<?php

/**
 * Auto generated by MySQL Workbench Schema Exporter.
 * Version 3.0.3 (doctrine2-annotationsf3) on 2019-03-07 17:29:44.
 * Goto
 * https://github.com/mysql-workbench-schema-exporter/mysql-workbench-schema-exporter
 * for more information.
 */

namespace AppBundle\Entity;

use Doctrine\ORM\Mapping as ORM;


/**
 * AppBundle\Entity\Portafolio
 *
 * @ORM\Entity()
 * @ORM\Table(name="Portafolios")
 * @ORM\HasLifecycleCallbacks()
 */
class Portafolio
{
    /**
     * @ORM\Id
     * @ORM\Column(type="integer")
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    protected $id;

    /**
     * @ORM\Column(type="string", length=200, nullable=true)
     */
    protected $empresa;

    /**
     * @ORM\Column(type="string", length=200, nullable=true)
     */
    protected $actividades;

    /**
     * @ORM\Column(type="string", length=500, nullable=true)
     */
    protected $descripcion;

    /**
     * @ORM\Column(type="string", length=200, nullable=true)
     */
    protected $url;

    /**
     * @ORM\Column(type="string", length=200, nullable=true)
     */
    protected $foto;

    /**
     * @ORM\Column(type="string", length=200, nullable=true)
     */
    protected $thumb;

    /**
     * @ORM\Column(type="boolean", nullable=true, options={"default":0})
     */
    protected $activo= false;

    /**
     * @ORM\Column(type="datetime", nullable=true)
     */
    protected $creado;

    /**
     * @ORM\Column(type="datetime", nullable=true)
     */
    protected $actualizado;

    public function __construct()
    {
    }

    public function __toString()
    {
        return (string) $this->id;
    }

    /**
    * Gets triggered only on insert
    * @ORM\PrePersist
    */
    public function onPrePersist(){
        $this->creado = new \DateTime("now"); 
    }

    /**
    * Gets triggered only on update
    * @ORM\PreUpdate
    */
    public function onPreUpdate(){
        $this->actualizado = new \DateTime("now"); 
    }

    /**
     * Set the value of id.
     *
     * @param integer $id
     * @return \AppBundle\Entity\Portafolio
     */
    public function setId($id)
    {
        $this->id = $id;

        return $this;
    }

    /**
     * Get the value of id.
     *
     * @return integer
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set the value of empresa.
     *
     * @param string $empresa
     * @return \AppBundle\Entity\Portafolio
     */
    public function setEmpresa($empresa)
    {
        $this->empresa = $empresa;

        return $this;
    }

    /**
     * Get the value of empresa.
     *
     * @return string
     */
    public function getEmpresa()
    {
        return $this->empresa;
    }

    /**
     * Set the value of actividades.
     *
     * @param string $actividades
     * @return \AppBundle\Entity\Portafolio
     */
    public function setActividades($actividades)
    {
        $this->actividades = $actividades;

        return $this;
    }

    /**
     * Get the value of actividades.
     *
     * @return string
     */
    public function getActividades()
    {
        return $this->actividades;
    }

    /**
     * Set the value of descripcion.
     *
     * @param string $descripcion
     * @return \AppBundle\Entity\Portafolio
     */
    public function setDescripcion($descripcion)
    {
        $this->descripcion = $descripcion;

        return $this;
    }

    /**
     * Get the value of descripcion.
     *
     * @return string
     */
    public function getDescripcion()
    {
        return $this->descripcion;
    }

    /**
     * @return string
     */
    public function getUrl()
    {
        return $this->url;
    }

    /**
     * @param string $url
     * @return \AppBundle\Entity\Portafolio
     */
    public function setUrl($url)
    {
        $this->url = $url;
        return $this;
    }

    /**
     * Set the value of foto.
     *
     * @param string $foto
     * @return \AppBundle\Entity\Portafolio
     */
    public function setFoto($foto)
    {
        $this->foto = $foto;

        return $this;
    }

    /**
     * Get the value of foto.
     *
     * @return string
     */
    public function getFoto()
    {
        return $this->foto;
    }

    /**
     * Set the value of thumb.
     *
     * @param string $thumb
     * @return \AppBundle\Entity\Portafolio
     */
    public function setThumb($thumb)
    {
        $this->thumb = $thumb;

        return $this;
    }

    /**
     * Get the value of thumb.
     *
     * @return string
     */
    public function getThumb()
    {
        return $this->thumb;
    }

    /**
     * Set the value of activo.
     *
     * @param boolean $activo
     * @return \AppBundle\Entity\Portafolio
     */
    public function setActivo($activo)
    {
        $this->activo = $activo;

        return $this;
    }

    /**
     * Get the value of activo.
     *
     * @return boolean
     */
    public function getActivo()
    {
        return $this->activo;
    }

    /**
     * Set the value of creado.
     *
     * @param \DateTime $creado
     * @return \AppBundle\Entity\Portafolio
     */
    public function setCreado($creado)
    {
        $this->creado = $creado;

        return $this;
    }

    /**
     * Get the value of creado.
     *
     * @return \DateTime
     */
    public function getCreado()
    {
        return $this->creado;
    }

    /**
     * Set the value of actualizado.
     *
     * @param \DateTime $actualizado
     * @return \AppBundle\Entity\Portafolio
     */
    public function setActualizado($actualizado)
    {
        $this->actualizado = $actualizado;

        return $this;
    }

    /**
     * Get the value of actualizado.
     *
     * @return \DateTime
     */
    public function getActualizado()
    {
        return $this->actualizado;
    }

    public function __sleep()
    {
        return array('id', 'empresa', 'actividades', 'descripcion', 'foto', 'thumb', 'activo', 'creado', 'actualizado');
    }
}
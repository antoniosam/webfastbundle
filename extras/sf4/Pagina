<?php

/**
 * Auto generated by MySQL Workbench Schema Exporter.
 * Version 3.0.3 (doctrine2-annotationsf4) on 2019-03-19 18:11:41.
 * Goto
 * https://github.com/mysql-workbench-schema-exporter/mysql-workbench-schema-exporter
 * for more information.
 */

namespace App\Entity;

use Ast\UtilString\Slugg;
use Ast\UtilString\UniqueId;
use Doctrine\ORM\Mapping as ORM;


/**
 * App\Entity\Pagina
 *
 * @ORM\Entity()
 * @ORM\Table(name="Paginas")
 * @ORM\HasLifecycleCallbacks()
 */
class Pagina
{
    /**
     * @ORM\Id
     * @ORM\Column(type="integer")
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    protected $id;

    /**
     * @ORM\Column(type="string", length=45, nullable=true)
     */
    protected $referencia;

    /**
     * @ORM\Column(type="string", length=150, nullable=true)
     */
    protected $categoriaslug;

    /**
     * @ORM\Column(type="string", length=150, nullable=true)
     */
    protected $slug;

    /**
     * @ORM\Column(type="string", length=150, nullable=true)
     */
    protected $categoria;

    /**
     * @ORM\Column(type="string", length=150, nullable=true)
     */
    protected $titulo;

    /**
     * @ORM\Column(type="string", length=200, nullable=true)
     */
    protected $subtitulo;

    /**
     * @ORM\Column(type="string", length=500, nullable=true)
     */
    protected $descripcion;

    /**
     * @ORM\Column(type="string", length=200, nullable=true)
     */
    protected $imagenpreview;

    /**
     * @ORM\Column(type="string", length=200, nullable=true)
     */
    protected $media;

    /**
     * @ORM\Column(type="string", length=200, nullable=true)
     */
    protected $imagen;

    /**
     * @ORM\Column(type="string", length=200, nullable=true)
     */
    protected $poster;

    /**
     * @ORM\Column(type="string", length=200, nullable=true)
     */
    protected $video;

    /**
     * @ORM\Column(type="string", length=1200, nullable=true)
     */
    protected $contenido;

    /**
     * @ORM\Column(type="string", length=600, nullable=true)
     */
    protected $widgets;

    /**
     * @ORM\Column(type="string", length=200, nullable=true)
     */
    protected $archivo;

    /**
     * @ORM\Column(type="boolean", nullable=true, options={"default":0})
     */
    protected $activo= false;

    /**
     * @ORM\Column(type="string", length=200, nullable=true)
     */
    protected $metatitle;

    /**
     * @ORM\Column(type="string", length=300, nullable=true)
     */
    protected $metakey;

    /**
     * @ORM\Column(type="string", length=300, nullable=true)
     */
    protected $metadesc;

    /**
     * @ORM\Column(type="string", length=200, nullable=true)
     */
    protected $metaimage;

    /**
     * @ORM\Column(type="string", length=200, nullable=true)
     */
    protected $metaimagelarge;

    /**
     * @ORM\Column(type="string", length=250, nullable=true)
     */
    protected $metaurlcanonica;

    /**
     * @ORM\Column(type="datetime", nullable=true)
     */
    protected $creado;

    /**
     * @ORM\Column(type="datetime", nullable=true)
     */
    protected $actualizado;

    public function __construct()
    {
    }

    public function __toString()
    {
        return (string) $this->id;
    }

    /**
    * Gets triggered only on insert
    * @ORM\PrePersist
    */
    public function onPrePersist(){
        $this->creado = new \DateTime("now");
        $this->referencia = UniqueId::generate();
        $this->slug = Slugg::slugify($this->titulo);
        $this->categoriaslug = Slugg::slugify($this->categoria);
    }

    /**
    * Gets triggered only on update
    * @ORM\PreUpdate
    */
    public function onPreUpdate(){
        $this->actualizado = new \DateTime("now");
        $this->slug = Slugg::slugify($this->titulo);
        $this->categoriaslug = Slugg::slugify($this->categoria);
    }

    /**
     * Set the value of id.
     *
     * @param integer $id
     * @return \App\Entity\Pagina
     */
    public function setId($id)
    {
        $this->id = $id;

        return $this;
    }

    /**
     * Get the value of id.
     *
     * @return integer
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set the value of referencia.
     *
     * @param string $referencia
     * @return \App\Entity\Pagina
     */
    public function setReferencia($referencia)
    {
        $this->referencia = $referencia;

        return $this;
    }

    /**
     * Get the value of referencia.
     *
     * @return string
     */
    public function getReferencia()
    {
        return $this->referencia;
    }

    /**
     * Set the value of categoriaslug.
     *
     * @param string $categoriaslug
     * @return \App\Entity\Pagina
     */
    public function setCategoriaslug($categoriaslug)
    {
        $this->categoriaslug = $categoriaslug;

        return $this;
    }

    /**
     * Get the value of categoriaslug.
     *
     * @return string
     */
    public function getCategoriaslug()
    {
        return $this->categoriaslug;
    }

    /**
     * Set the value of slug.
     *
     * @param string $slug
     * @return \App\Entity\Pagina
     */
    public function setSlug($slug)
    {
        $this->slug = $slug;

        return $this;
    }

    /**
     * Get the value of slug.
     *
     * @return string
     */
    public function getSlug()
    {
        return $this->slug;
    }

    /**
     * Set the value of categoria.
     *
     * @param string $categoria
     * @return \App\Entity\Pagina
     */
    public function setCategoria($categoria)
    {
        $this->categoria = $categoria;

        return $this;
    }

    /**
     * Get the value of categoria.
     *
     * @return string
     */
    public function getCategoria()
    {
        return $this->categoria;
    }

    /**
     * Set the value of titulo.
     *
     * @param string $titulo
     * @return \App\Entity\Pagina
     */
    public function setTitulo($titulo)
    {
        $this->titulo = $titulo;

        return $this;
    }

    /**
     * Get the value of titulo.
     *
     * @return string
     */
    public function getTitulo()
    {
        return $this->titulo;
    }

    /**
     * Set the value of subtitulo.
     *
     * @param string $subtitulo
     * @return \App\Entity\Pagina
     */
    public function setSubtitulo($subtitulo)
    {
        $this->subtitulo = $subtitulo;

        return $this;
    }

    /**
     * Get the value of subtitulo.
     *
     * @return string
     */
    public function getSubtitulo()
    {
        return $this->subtitulo;
    }

    /**
     * Set the value of descripcion.
     *
     * @param string $descripcion
     * @return \App\Entity\Pagina
     */
    public function setDescripcion($descripcion)
    {
        $this->descripcion = $descripcion;

        return $this;
    }

    /**
     * Get the value of descripcion.
     *
     * @return string
     */
    public function getDescripcion()
    {
        return $this->descripcion;
    }

    /**
     * Set the value of imagenpreview.
     *
     * @param string $imagenpreview
     * @return \App\Entity\Pagina
     */
    public function setImagenpreview($imagenpreview)
    {
        $this->imagenpreview = $imagenpreview;

        return $this;
    }

    /**
     * Get the value of imagenpreview.
     *
     * @return string
     */
    public function getImagenpreview()
    {
        return $this->imagenpreview;
    }

    /**
     * Set the value of media.
     *
     * @param string $media
     * @return \App\Entity\Pagina
     */
    public function setMedia($media)
    {
        $this->media = $media;

        return $this;
    }

    /**
     * Get the value of media.
     *
     * @return string
     */
    public function getMedia()
    {
        return $this->media;
    }

    /**
     * Set the value of imagen.
     *
     * @param string $imagen
     * @return \App\Entity\Pagina
     */
    public function setImagen($imagen)
    {
        $this->imagen = $imagen;

        return $this;
    }

    /**
     * Get the value of imagen.
     *
     * @return string
     */
    public function getImagen()
    {
        return $this->imagen;
    }

    /**
     * Set the value of poster.
     *
     * @param string $poster
     * @return \App\Entity\Pagina
     */
    public function setPoster($poster)
    {
        $this->poster = $poster;

        return $this;
    }

    /**
     * Get the value of poster.
     *
     * @return string
     */
    public function getPoster()
    {
        return $this->poster;
    }

    /**
     * Set the value of video.
     *
     * @param string $video
     * @return \App\Entity\Pagina
     */
    public function setVideo($video)
    {
        $this->video = $video;

        return $this;
    }

    /**
     * Get the value of video.
     *
     * @return string
     */
    public function getVideo()
    {
        return $this->video;
    }

    /**
     * Set the value of contenido.
     *
     * @param string $contenido
     * @return \App\Entity\Pagina
     */
    public function setContenido($contenido)
    {
        $this->contenido = $contenido;

        return $this;
    }

    /**
     * Get the value of contenido.
     *
     * @return string
     */
    public function getContenido()
    {
        return $this->contenido;
    }

    /**
     * Set the value of widgets.
     *
     * @param string $widgets
     * @return \App\Entity\Pagina
     */
    public function setWidgets($widgets)
    {
        $this->widgets = $widgets;

        return $this;
    }

    /**
     * Get the value of widgets.
     *
     * @return string
     */
    public function getWidgets()
    {
        return $this->widgets;
    }

    /**
     * Set the value of archivo.
     *
     * @param string $archivo
     * @return \App\Entity\Pagina
     */
    public function setArchivo($archivo)
    {
        $this->archivo = $archivo;

        return $this;
    }

    /**
     * Get the value of archivo.
     *
     * @return string
     */
    public function getArchivo()
    {
        return $this->archivo;
    }

    /**
     * Set the value of activo.
     *
     * @param boolean $activo
     * @return \App\Entity\Pagina
     */
    public function setActivo($activo)
    {
        $this->activo = $activo;

        return $this;
    }

    /**
     * Get the value of activo.
     *
     * @return boolean
     */
    public function getActivo()
    {
        return $this->activo;
    }

    /**
     * Set the value of metatitle.
     *
     * @param string $metatitle
     * @return \App\Entity\Pagina
     */
    public function setMetatitle($metatitle)
    {
        $this->metatitle = $metatitle;

        return $this;
    }

    /**
     * Get the value of metatitle.
     *
     * @return string
     */
    public function getMetatitle()
    {
        return $this->metatitle;
    }

    /**
     * Set the value of metakey.
     *
     * @param string $metakey
     * @return \App\Entity\Pagina
     */
    public function setMetakey($metakey)
    {
        $this->metakey = $metakey;

        return $this;
    }

    /**
     * Get the value of metakey.
     *
     * @return string
     */
    public function getMetakey()
    {
        return $this->metakey;
    }

    /**
     * Set the value of metadesc.
     *
     * @param string $metadesc
     * @return \App\Entity\Pagina
     */
    public function setMetadesc($metadesc)
    {
        $this->metadesc = $metadesc;

        return $this;
    }

    /**
     * Get the value of metadesc.
     *
     * @return string
     */
    public function getMetadesc()
    {
        return $this->metadesc;
    }

    /**
     * Set the value of metaimage.
     *
     * @param string $metaimage
     * @return \App\Entity\Pagina
     */
    public function setMetaimage($metaimage)
    {
        $this->metaimage = $metaimage;

        return $this;
    }

    /**
     * Get the value of metaimage.
     *
     * @return string
     */
    public function getMetaimage()
    {
        return $this->metaimage;
    }

    /**
     * Set the value of metaimagelarge.
     *
     * @param string $metaimagelarge
     * @return \App\Entity\Pagina
     */
    public function setMetaimagelarge($metaimagelarge)
    {
        $this->metaimagelarge = $metaimagelarge;

        return $this;
    }

    /**
     * Get the value of metaimagelarge.
     *
     * @return string
     */
    public function getMetaimagelarge()
    {
        return $this->metaimagelarge;
    }

    /**
     * Set the value of metaurlcanonica.
     *
     * @param string $metaurlcanonica
     * @return \App\Entity\Pagina
     */
    public function setMetaurlcanonica($metaurlcanonica)
    {
        $this->metaurlcanonica = $metaurlcanonica;

        return $this;
    }

    /**
     * Get the value of metaurlcanonica.
     *
     * @return string
     */
    public function getMetaurlcanonica()
    {
        return $this->metaurlcanonica;
    }

    /**
     * Set the value of creado.
     *
     * @param \DateTime $creado
     * @return \App\Entity\Pagina
     */
    public function setCreado($creado)
    {
        $this->creado = $creado;

        return $this;
    }

    /**
     * Get the value of creado.
     *
     * @return \DateTime
     */
    public function getCreado()
    {
        return $this->creado;
    }

    /**
     * Set the value of actualizado.
     *
     * @param \DateTime $actualizado
     * @return \App\Entity\Pagina
     */
    public function setActualizado($actualizado)
    {
        $this->actualizado = $actualizado;

        return $this;
    }

    /**
     * Get the value of actualizado.
     *
     * @return \DateTime
     */
    public function getActualizado()
    {
        return $this->actualizado;
    }

    public function __sleep()
    {
        return array('id', 'referencia', 'categoriaslug', 'slug', 'categoria', 'titulo', 'subtitulo', 'descripcion', 'imagenpreview', 'media', 'imagen', 'poster', 'video', 'contenido', 'widgets', 'archivo', 'activo', 'metatitle', 'metakey', 'metadesc', 'metaimage', 'metaimagelarge', 'metaurlcanonica', 'creado', 'actualizado');
    }
}
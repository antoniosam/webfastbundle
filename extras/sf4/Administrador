<?php

/**
 * Auto generated by MySQL Workbench Schema Exporter.
 * Version 3.0.3 (doctrine2-annotationsf4) on 2019-03-06 16:59:14.
 * Goto
 * https://github.com/mysql-workbench-schema-exporter/mysql-workbench-schema-exporter
 * for more information.
 */

namespace App\Entity;

use Doctrine\ORM\Mapping as ORM;

use Symfony\Component\Security\Core\User\UserInterface;

/**
 * App\Entity\Administrador
 *
 * @ORM\Entity()
 * @ORM\Table(name="Administradores")
 * @ORM\HasLifecycleCallbacks()
 */
class Administrador implements UserInterface
{
    /**
     * @ORM\Id
     * @ORM\Column(type="integer")
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    protected $id;

    /**
     * @ORM\Column(type="string", length=200, nullable=true)
     */
    protected $nombre;

    /**
     * @ORM\Column(type="string", length=200, nullable=true)
     */
    protected $apellidos;

    /**
     * @ORM\Column(type="string", length=200, nullable=true)
     */
    protected $correo;

    /**
     * @ORM\Column(type="string", length=200, nullable=true)
     */
    protected $pass;

    /**
     * @ORM\Column(type="string", length=200, nullable=true)
     */
    protected $salt;

    /**
     * @ORM\Column(type="boolean", nullable=true, options={"default":0})
     */
    protected $activo= false;

    /**
     * @ORM\Column(type="boolean", nullable=true, options={"default":0})
     */
    protected $master= false;

    /**
     * @ORM\Column(type="string", length=200, nullable=true)
     */
    protected $rol;

    /**
     * @ORM\Column(type="datetime", nullable=true)
     */
    protected $creado;

    /**
     * @ORM\Column(type="datetime", nullable=true)
     */
    protected $actualizado;

    public function __construct()
    {
    }

    public function __toString()
    {
        return $this->nombre;
    }

    /**
    * Gets triggered only on insert
    * @ORM\PrePersist
    */
    public function onPrePersist(){
        $this->creado = new \DateTime("now"); 
    }

    /**
    * Gets triggered only on update
    * @ORM\PreUpdate
    */
    public function onPreUpdate(){
        $this->actualizado = new \DateTime("now"); 
    }

    /**
     * Set the value of id.
     *
     * @param integer $id
     * @return \App\Entity\Administrador
     */
    public function setId($id)
    {
        $this->id = $id;

        return $this;
    }

    /**
     * Get the value of id.
     *
     * @return integer
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set the value of nombre.
     *
     * @param string $nombre
     * @return \App\Entity\Administrador
     */
    public function setNombre($nombre)
    {
        $this->nombre = $nombre;

        return $this;
    }

    /**
     * Get the value of nombre.
     *
     * @return string
     */
    public function getNombre()
    {
        return $this->nombre;
    }

    /**
     * Set the value of apellidos.
     *
     * @param string $apellidos
     * @return \App\Entity\Administrador
     */
    public function setApellidos($apellidos)
    {
        $this->apellidos = $apellidos;

        return $this;
    }

    /**
     * Get the value of apellidos.
     *
     * @return string
     */
    public function getApellidos()
    {
        return $this->apellidos;
    }

    /**
     * Set the value of correo.
     *
     * @param string $correo
     * @return \App\Entity\Administrador
     */
    public function setCorreo($correo)
    {
        $this->correo = $correo;

        return $this;
    }

    /**
     * Get the value of correo.
     *
     * @return string
     */
    public function getCorreo()
    {
        return $this->correo;
    }

    /**
     * Set the value of pass.
     *
     * @param string $pass
     * @return \App\Entity\Administrador
     */
    public function setPass($pass)
    {
        $this->pass = $pass;

        return $this;
    }

    /**
     * Get the value of pass.
     *
     * @return string
     */
    public function getPass()
    {
        return $this->pass;
    }

    /**
     * Set the value of salt.
     *
     * @param string $salt
     * @return \App\Entity\Administrador
     */
    public function setSalt($salt)
    {
        $this->salt = $salt;

        return $this;
    }

    /**
     * Get the value of salt.
     *
     * @return string
     */
    public function getSalt()
    {
        return $this->salt;
    }

    /**
     * Set the value of activo.
     *
     * @param boolean $activo
     * @return \App\Entity\Administrador
     */
    public function setActivo($activo)
    {
        $this->activo = $activo;

        return $this;
    }

    /**
     * Get the value of activo.
     *
     * @return boolean
     */
    public function getActivo()
    {
        return $this->activo;
    }

    /**
     * Set the value of master.
     *
     * @param boolean $master
     * @return \App\Entity\Administrador
     */
    public function setMaster($master)
    {
        $this->master = $master;

        return $this;
    }

    /**
     * Get the value of master.
     *
     * @return boolean
     */
    public function getMaster()
    {
        return $this->master;
    }

    /**
     * Set the value of rol.
     *
     * @param string $rol
     * @return \App\Entity\Administrador
     */
    public function setRol($rol)
    {
        $this->rol = $rol;

        return $this;
    }

    /**
     * Get the value of rol.
     *
     * @return string
     */
    public function getRol()
    {
        return $this->rol;
    }

    /**
     * Set the value of creado.
     *
     * @param \DateTime $creado
     * @return \App\Entity\Administrador
     */
    public function setCreado($creado)
    {
        $this->creado = $creado;

        return $this;
    }

    /**
     * Get the value of creado.
     *
     * @return \DateTime
     */
    public function getCreado()
    {
        return $this->creado;
    }

    /**
     * Set the value of actualizado.
     *
     * @param \DateTime $actualizado
     * @return \App\Entity\Administrador
     */
    public function setActualizado($actualizado)
    {
        $this->actualizado = $actualizado;

        return $this;
    }

    /**
     * Get the value of actualizado.
     *
     * @return \DateTime
     */
    public function getActualizado()
    {
        return $this->actualizado;
    }

    public function __sleep()
    {
        return array('id', 'nombre', 'apellidos', 'correo', 'pass', 'salt', 'activo', 'master', 'rol', 'creado', 'actualizado');
    }

    public function getUsername()
    {
        return $this->correo;
    }

    public function getSalts()
    {
        return '';
    }

    public function getPassword()
    {
        return $this->pass;
    }

    public function getRoles()
    {
        return array('ROLE_LOCAL');
    }

    public function eraseCredentials()
    {
    }

}